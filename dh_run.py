# -*- coding: utf-8 -*-
"""DH_RUN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19SIyZtWxHyf5Wd9KOXbe1iyikwLV1sUP
"""

import math
pi=math.pi

def multiply(X,Y):
  result = [[0,0,0,0],
            [0,0,0,0],
            [0,0,0,0],
            [0,0,0,0]]

# iterate through rows of X
  for i in range(len(X)):
     # iterate through columns of Y
     for j in range(len(Y[0])):
         # iterate through rows of Y
         for k in range(len(Y)):
            result[i][j] += X[i][k] * Y[k][j]
  return result

def Transform(M,i):
  
 [θ,d,a,α]=[M[i][0],M[i][1],M[i][2],M[i][3]] 

 θ=θ*pi/180; α=α*pi/180

 cθ=math.cos(θ); sθ=math.sin(θ)
 cα=math.cos(α); sα=math.sin(α)

 M1=[[cθ,-sθ,0,0],
     [sθ, cθ,0,0],
     [0,  0, 1,0],
     [0,  0, 0,1]]

 M2=[[1,0,0,0],
     [0,1,0,0],
     [0,0,1,d],
     [0,0,0,1]]

 M3=[[1,0,0,a],
     [0,1,0,0],
     [0,0,1,0],
     [0,0,0,1]]

 M4=[[1,0,  0 ,0],
     [0,cα,-sα,0],
     [0,sα, cα,0],
     [0,0,  0, 1]]

 T=multiply(multiply(multiply(M1,M2),M3),M4)

 return T

def DH(dh):
  T = [[1,0,0,0],
       [0,1,0,0],
       [0,0,1,0],
       [0,0,0,1]]
  for i in range(n):
    T=multiply(T,Transform(dh,i))
  
  return T

def EndEff(M):
  [x,y,z]=[ M[0][3], M[1][3], M[2][3] ]
  
  # CONSIDERING X-Y-Z FIXED ANGLE ROTATION
  pitch   = math.atan2(-M[2][0],(M[0][0]**2 + M[1][0]**2)**0.5)

  CB = math.cos(pitch); SB = math.sin(pitch)

  roll = math.atan2(M[1][0]/CB,M[0][0]/CB)
  yaw  = math.atan2(M[2][1]/CB,M[2][2]/CB)

  return [ x , y , z , yaw , pitch , roll ]

if __name__ == '__main__':
  print("Enter number of links")
  N=input()
  n=int(N)
  dh=[]
  print("Enter DH Params in θ d a α order")
  for i in range(n):
    s=input().split()
    a=[]
    for j in range(4):
      a.append(float(s[j]))
    dh.append(a)
  print("DH PARAM MATRIX ")
  print(" θ, d, a, α ")
  for i in range(n):
    print(dh[i])
  
  print("")
  print("---------------------------------------")
  for i in range(n):
    print("")
    print("T: ",i," -> ",i+1)
    print("")
    T=Transform(dh,i)
    for i in range(4):
      for j in range(4):
        T[i][j]=int(T[i][j])
    for j in range(4):
      print(T[j])

  print("")
  print("----------------------------------------")
  print("MANIPULATOR TRANSFORMATION MATRIX")
  print("T: ",0," -> ",n)
  print("")
  T=DH(dh)
  for i in range(4):
    for j in range(4):
      T[i][j]=int(T[i][j])

  for j in range(4):
    print(T[j])

  [x,y,z,yaw,pitch,roll] = EndEff(T)

  print("----------------------------------------")
  print("END EFFECTOR POSITION WRT BASE")
  print("x:",x,"y:",y,"z:",z)
  print("")
  print("END EFFECTOR ORIENTATION WRT BASE")
  print("yaw:",int(yaw*180/pi),"deg    pitch:",int(pitch*180/pi),"deg   roll:",int(roll*180/pi),"deg")